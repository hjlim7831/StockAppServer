<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- User Info Data 관련 SQL -->
<mapper namespace="com.user.info.UserInfoMapper">
	
	<!-- 회원가입을 누르면, 입력 받은 회원 데이터를 INSERT -->
	<insert id="insertUser" parameterType="com.user.info.UserInfoDto">  
	    insert into user (user_num, name, nick_name, id, password, simple_pwd, email, phone_number, address, mk_rank, total_asset, total_asset_prev)
	    values (#{user_num}, #{name}, #{nick_name}, #{id}, #{password}, #{simple_pwd}, #{email}, #{phone_number}, #{address}, 0, 5000000, 5000000)
	</insert>
	
	<!-- 회원가입 시 중복 확인을 위한 기존 데이터 가져오기 -->
	<!-- id로 사용자 id를 SELECT -->
	<select id="selectId" parameterType="string" resultType="string">
        select id
        from user
        where id = #{id}
	</select>
	
	<!-- email로 사용자 id를 SELECT  -->
	<select id="selectEmail" parameterType="string" resultType="string">
        select id
        from user
        where email = #{email}
	</select>
	
	<!-- nick_name로 사용자 id를 SELECT -->
	<select id="selectNickName" parameterType="string" resultType="string">
        select id
        from user
        where nick_name = #{nick_name}
	</select>
	
	<!-- phone_number로 사용자 id를 SELECT -->
	<select id="selectPhoneNumber" parameterType="string" resultType="string">
        select id
        from user
        where phone_number = #{phone_number}
	</select>
		
	<!-- 로그인 시 입력한 id에 해당하는 id와 비밀번호를 SELECT -->
	<select id="selectUser" parameterType="string" resultType="com.user.info.UserInfoDto">
        select id, password, user_num, nick_name
        from user
        where id = #{id}
	</select>
	
	<!-- 회원탈퇴 시 탈퇴하는 회원의 회원정보 삭제 -->
	<delete id="deleteUserByUUID" parameterType="string">
		DELETE FROM user
		WHERE user_num = #{user_num}
	</delete>

	<!-- 회원탈퇴 시 탈퇴하는 회원의 계정정보 삭제 -->	
	<delete id="deleteAccountByUUID" parameterType="string">
		DELETE FROM account
		WHERE user_num = #{user_num}
	</delete>

	<!-- 회원탈퇴 시 탈퇴하는 회원의 관심 리스트 삭제 -->
	<delete id="deleteWishListByUUID" parameterType="string">
		DELETE FROM wish_list
		WHERE user_num = #{user_num}
	</delete>

	<!-- 회원탈퇴 시 탈퇴하는 회원의 보유 주식 리스트 삭제 -->
	<delete id="deleteMyListByUUID" parameterType="string">
		DELETE FROM my_list
		WHERE user_num = #{user_num}
	</delete>


</mapper>